{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","url","siteUrl","location","frontmatter","description","excerpt","className","thumbnail","class","fluid","childImageSharp","alt","role","duration","year","tools","overview","href","link","target","linkSource","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery"],"mappings":"+NAOMA,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAC9CC,EAAMR,KAAKC,MAAMC,KAAKG,KAAKC,aAAaG,QAE9C,OACE,kBAAC,IAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUH,MAAOH,EAAWI,IAAKA,GAC5D,kBAAC,IAAD,CACED,MAAOR,EAAKY,YAAYJ,MACxBK,YAAab,EAAKY,YAAYC,aAAeb,EAAKc,UAEpD,6BACEC,UAAS,iBAAkBf,EAAKY,YAAYI,WAAjB,aAE3B,4BAAQD,UAAU,uBAChB,wBAAIA,UAAU,sBAAsBf,EAAKY,YAAYJ,QAGtDR,EAAKY,YAAYC,aAChB,uBAAGI,MAAM,wBAAwBjB,EAAKY,YAAYC,aAGnDb,EAAKY,YAAYI,WAChB,yBAAKD,UAAU,sBACb,kBAAC,IAAD,CACEA,UAAU,WACVG,MAAOlB,EAAKY,YAAYI,UAAUG,gBAAgBD,MAClDE,IAAKpB,EAAKY,YAAYJ,SAK5B,yBAAKO,UAAU,mCACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,wCACb,uBAAGA,UAAU,sCAAb,QAECf,EAAKY,YAAYS,MAChB,uBAAGJ,MAAM,8BACNjB,EAAKY,YAAYS,OAIxB,yBAAKN,UAAU,wCACb,uBAAGA,UAAU,sCAAb,YAECf,EAAKY,YAAYU,UAChB,uBAAGL,MAAM,8BACNjB,EAAKY,YAAYU,WAIxB,yBAAKP,UAAU,wCACb,uBAAGA,UAAU,sCAAb,QAECf,EAAKY,YAAYW,MAChB,uBAAGN,MAAM,8BACNjB,EAAKY,YAAYW,OAIxB,yBAAKR,UAAU,wCACb,uBAAGA,UAAU,sCAAb,SAECf,EAAKY,YAAYY,OAChB,uBAAGP,MAAM,8BACNjB,EAAKY,YAAYY,SAK1B,yBAAKT,UAAU,wCACZf,EAAKY,YAAYa,UAChB,uBAAGR,MAAM,8BACNjB,EAAKY,YAAYa,UAItB,uBACEV,UAAU,sBACVW,KAAM1B,EAAKY,YAAYe,KACvBC,OAAO,UAHT,kBAKkB,IACf5B,EAAKY,YAAYiB,YAChB,8BAAO7B,EAAKY,YAAYiB,eAMhC,yBACEd,UAAU,oBACVe,wBAAyB,CAAEC,OAAQ/B,EAAKgC,QAG1C,4BAAQjB,UAAU,2B,GAjGGkB,IAAMC,WA6GtBpC,YAER,IAAMqC,EAAS","file":"component---src-templates-blog-post-js-106c1aabcd007f404378.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const url = this.props.data.site.siteMetadata.siteUrl\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} url={url}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article\n          className={`post-content ${post.frontmatter.thumbnail || `no-image`}`}\n        >\n          <header className=\"post-content-header\">\n            <h1 className=\"post-content-title\">{post.frontmatter.title}</h1>\n          </header>\n\n          {post.frontmatter.description && (\n            <p class=\"post-content-excerpt\">{post.frontmatter.description}</p>\n          )}\n\n          {post.frontmatter.thumbnail && (\n            <div className=\"post-content-image\">\n              <Img\n                className=\"kg-image\"\n                fluid={post.frontmatter.thumbnail.childImageSharp.fluid}\n                alt={post.frontmatter.title}\n              />\n            </div>\n          )}\n\n          <div className=\"post-content-overview-container\">\n            <div className=\"post-content-overview-stats-container\">\n              <div className=\"post-content-overview-stat-container\">\n                <p className=\"post-content-overivew-stats-header\">Role</p>\n\n                {post.frontmatter.role && (\n                  <p class=\"post-content-overview-stat\">\n                    {post.frontmatter.role}\n                  </p>\n                )}\n              </div>\n              <div className=\"post-content-overview-stat-container\">\n                <p className=\"post-content-overivew-stats-header\">Duration</p>\n\n                {post.frontmatter.duration && (\n                  <p class=\"post-content-overview-stat\">\n                    {post.frontmatter.duration}\n                  </p>\n                )}\n              </div>\n              <div className=\"post-content-overview-stat-container\">\n                <p className=\"post-content-overivew-stats-header\">Year</p>\n\n                {post.frontmatter.year && (\n                  <p class=\"post-content-overview-stat\">\n                    {post.frontmatter.year}\n                  </p>\n                )}\n              </div>\n              <div className=\"post-content-overview-stat-container\">\n                <p className=\"post-content-overivew-stats-header\">Tools</p>\n\n                {post.frontmatter.tools && (\n                  <p class=\"post-content-overview-stat\">\n                    {post.frontmatter.tools}\n                  </p>\n                )}\n              </div>\n            </div>\n            <div className=\"post-content-overview-text-container\">\n              {post.frontmatter.overview && (\n                <p class=\"post-content-overview-text\">\n                  {post.frontmatter.overview}\n                </p>\n              )}\n\n              <a\n                className=\"project-link-button\"\n                href={post.frontmatter.link}\n                target=\"_blank\"\n              >\n                View Project on{\" \"}\n                {post.frontmatter.linkSource && (\n                  <span>{post.frontmatter.linkSource}</span>\n                )}\n              </a>\n            </div>\n          </div>\n\n          <div\n            className=\"post-content-body\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <footer className=\"post-content-footer\">\n            {/* There are two options for how we display the byline/author-info.\n        If the post has more than one author, we load a specific template\n        from includes/byline-multiple.hbs, otherwise, we just use the\n        default byline. */}\n          </footer>\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        overview\n        role\n        duration\n        year\n        tools\n        link\n        linkSource\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1360) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}