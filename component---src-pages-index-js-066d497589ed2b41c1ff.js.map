{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js"],"names":["props","className","postClass","node","frontmatter","thumbnail","to","fields","slug","style","background","color","title","shortDescription","noIndex","alt","src","thumbnailTransparent","childImageSharp","fluid","BlogIndex","location","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","keywords","description","target","rel","href","map","key","count","postclassName","query","render"],"mappings":"sLAGe,WAAAA,GAAK,OAClB,6BACEC,UAAS,aAAeD,EAAME,UAArB,KACPF,EAAMG,KAAKC,YAAYC,UAAvB,0BAGF,kBAAC,OAAD,CAAMC,GAAIN,EAAMG,KAAKI,OAAOC,KAAMP,UAAU,kBAC1C,yBAAKA,UAAU,qBACb,yBACEA,UAAU,iBACVQ,MAAO,CACLC,WAAYV,EAAMG,KAAKC,YAAYO,QAGrC,wBAAIV,UAAU,mBACXD,EAAMG,KAAKC,YAAYQ,OAASZ,EAAMG,KAAKI,OAAOC,MAErD,wBAAIP,UAAU,sBACXD,EAAMG,KAAKC,YAAYS,kBAE1B,yBAAKZ,UAAU,iBAAf,eACe,IACZD,EAAMG,KAAKC,YAAYU,SAAW,yBAGvC,yBAAKb,UAAU,6BACb,yBACEA,UAAU,kBACVc,IAAI,eACJC,IACEhB,EAAMG,KAAKC,YAAYa,qBAAqBC,gBAAgBC,MACzDH,WCvBXI,G,oBAAY,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAYD,EAAKE,KAAKC,aAAab,MACnCc,EAAQJ,EAAKK,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQjB,MAAOW,GACb,kBAAC,IAAD,CACEX,MAAM,YACNkB,SAAU,CAAC,OAAD,iCAGXR,EAAKE,KAAKC,aAAaM,aACtB,4BAAQ9B,UAAU,aAEhB,oCACQ,IACN,uBACEA,UAAU,YACV+B,OAAO,SACPC,IAAI,aACJC,KAAK,qCAJP,mBAOK,IATP,kJAkBJ,yBAAKjC,UAAU,aACZyB,EAAMS,KAAI,YAAe,IAAZhC,EAAW,EAAXA,KAEZ,OADA0B,IAEE,kBAAC,EAAD,CACEO,IAAKjC,EAAKI,OAAOC,KACjB6B,MAAOR,EACP1B,KAAMA,EACNmC,cAAa,gBAsDZ,mBAAAtC,GAAK,OAClB,kBAAC,cAAD,CACEuC,MA/CY,aAgDZC,OAAQ,SAAAlB,GAAI,OACV,kBAAC,EAAD,eAAWD,SAAUrB,EAAMqB,SAAUrB,OAAK,EAACsB,KAAMA,GAAUtB,S","file":"component---src-pages-index-js-066d497589ed2b41c1ff.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.postClass} ${\n      props.node.frontmatter.thumbnail ? `with-image` : `no-image`\n    }`}\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <div\n          className=\"post-card-text\"\n          style={{\n            background: props.node.frontmatter.color,\n          }}\n        >\n          <h2 className=\"post-card-title\">\n            {props.node.frontmatter.title || props.node.fields.slug}\n          </h2>\n          <h3 className=\"post-card-subtitle\">\n            {props.node.frontmatter.shortDescription}\n          </h3>\n          <div className=\"post-card-cta\">\n            View Project{\" \"}\n            {props.node.frontmatter.noIndex && \"(Password Protected)\"}\n          </div>\n        </div>\n        <div className=\"post-card-image-container\">\n          <img\n            className=\"post-card-image\"\n            alt=\"main project\"\n            src={\n              props.node.frontmatter.thumbnailTransparent.childImageSharp.fluid\n                .src\n            }\n          />\n        </div>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Portfolio\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          {/* <h1 className=\"page-head-title\">Hi, I'm Victor Grajski.</h1> */}\n          <h6>\n            I'm a{\" \"}\n            <a\n              className=\"hero-link\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://github.com/victor-grajski\"\n            >\n              Design Engineer\n            </a>{\" \"}\n            who uses code as a creative material to reveal novel, useful\n            insights about how people work in order to converge on the right\n            thing to build.\n          </h6>\n          {/* <h6>{data.site.siteMetadata.description}</h6> */}\n          {/* <h7>Fall 2020 portfolio pieces forthcoming!</h7> */}\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postclassName={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___order], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM YYYY\")\n            title\n            description\n            category\n            color\n            overview\n            shortDescription\n            noIndex\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            thumbnailTransparent {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}