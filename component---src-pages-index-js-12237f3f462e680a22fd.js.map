{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js"],"names":["props","className","postClass","node","frontmatter","thumbnail","to","fields","slug","style","background","color","title","longDescription","src","childImageSharp","fluid","BlogIndex","location","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","keywords","description","target","href","class","map","key","count","query","render"],"mappings":"sLAGe,WAAAA,GAAK,OAClB,6BACEC,UAAS,aAAeD,EAAME,UAArB,KACPF,EAAMG,KAAKC,YAAYC,UAAvB,0BAGF,kBAAC,OAAD,CAAMC,GAAIN,EAAMG,KAAKI,OAAOC,KAAMP,UAAU,kBAC1C,yBAAKA,UAAU,qBACb,yBACEA,UAAU,iBACVQ,MAAO,CACLC,WAAYV,EAAMG,KAAKC,YAAYO,QAGrC,wBAAIV,UAAU,mBACXD,EAAMG,KAAKC,YAAYQ,OAASZ,EAAMG,KAAKI,OAAOC,MAErD,wBAAIP,UAAU,sBACXD,EAAMG,KAAKC,YAAYS,kBAG5B,yBAAKZ,UAAU,6BACb,yBACEA,UAAU,kBACVa,IAAKd,EAAMG,KAAKC,YAAYC,UAAUU,gBAAgBC,MAAMF,WChBlEG,G,oBAAY,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAYD,EAAKE,KAAKC,aAAaV,MACnCW,EAAQJ,EAAKK,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQd,MAAOQ,GACb,kBAAC,IAAD,CAAKR,MAAM,YAAYe,SAAU,CAAC,OAAD,iCAEhCR,EAAKE,KAAKC,aAAaM,aACtB,4BAAQ3B,UAAU,aAEhB,8CACkB,IAChB,uBACEA,UAAU,YACV4B,OAAO,SACPC,KAAK,qCAHP,aAFF,iDASiD,IAC/C,uBACEC,MAAM,YACNF,OAAO,SACPC,KAAK,qCAHP,YAVF,mFAwBJ,yBAAK7B,UAAU,aACZsB,EAAMS,KAAI,YAAe,IAAZ7B,EAAW,EAAXA,KAEZ,OADAuB,IAEE,kBAAC,EAAD,CACEO,IAAK9B,EAAKI,OAAOC,KACjB0B,MAAOR,EACPvB,KAAMA,EACND,UAAS,gBA6CR,mBAAAF,GAAK,OAClB,kBAAC,cAAD,CACEmC,MAtCY,aAuCZC,OAAQ,SAAAjB,GAAI,OACV,kBAAC,EAAD,eAAWD,SAAUlB,EAAMkB,SAAUlB,OAAK,EAACmB,KAAMA,GAAUnB,S","file":"component---src-pages-index-js-12237f3f462e680a22fd.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.postClass} ${\n      props.node.frontmatter.thumbnail ? `with-image` : `no-image`\n    }`}\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <div\n          className=\"post-card-text\"\n          style={{\n            background: props.node.frontmatter.color,\n          }}\n        >\n          <h2 className=\"post-card-title\">\n            {props.node.frontmatter.title || props.node.fields.slug}\n          </h2>\n          <h3 className=\"post-card-subtitle\">\n            {props.node.frontmatter.longDescription}\n          </h3>\n        </div>\n        <div className=\"post-card-image-container\">\n          <img\n            className=\"post-card-image\"\n            src={props.node.frontmatter.thumbnail.childImageSharp.fluid.src}\n          />\n        </div>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO title=\"Portfolio\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          {/* <h1 className=\"page-head-title\">Hi, I'm Victor Grajski.</h1> */}\n          <h6>\n            I'm a designer,{\" \"}\n            <a\n              className=\"hero-link\"\n              target=\"_blank\"\n              href=\"https://github.com/victor-grajski\"\n            >\n              developer\n            </a>\n            , HCI Master's student at Carnegie Mellon, and{\" \"}\n            <a\n              class=\"hero-link\"\n              target=\"_blank\"\n              href=\"https://soundcloud.com/animistttt\"\n            >\n              musician\n            </a>\n            . At the risk of sounding clich√©, I create technologies that put\n            people first.\n          </h6>\n          {/* <h6>{data.site.siteMetadata.description}</h6> */}\n          {/* <h7>Fall 2020 portfolio pieces forthcoming!</h7> */}\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___order], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM YYYY\")\n            title\n            description\n            category\n            color\n            longDescription\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}